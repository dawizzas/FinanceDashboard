@page "/login"
@inject HttpClient Http
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage
@inject NavigationManager Navigation
@using FinanceDashboard.Shared.DTOs

<div class="background">
    <h3>Login</h3>
    <EditForm Model="request" OnSubmit="HandleLogin">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="request.Email" />
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="request.Password" type="password" />
        @if(!response.isSuccessful)
        {
            <p style="color: red">@response.Errors</p>
        }
        <button type="submit" class="btn btn-primary">Login</button>
        <NavLink href="/register" class="mt-2">Don't have an account? Register</NavLink>
    </EditForm>
</div>

@code {
    AuthenticationRequestDTO request = new AuthenticationRequestDTO();
    AuthenticationResponseDTO response = new AuthenticationResponseDTO();

    async Task HandleLogin()
    {
        var result = await Http.PostAsJsonAsync("api/authentication/login", request);
        response = await result.Content.ReadFromJsonAsync<AuthenticationResponseDTO>();
        
        if(response.isSuccessful)
        {
            await LocalStorage.SetItemAsync("token", response.Token);
            await AuthStateProvider.GetAuthenticationStateAsync();

            Navigation.NavigateTo("/");
        }        
    }
}