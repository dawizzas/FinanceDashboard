@page "/portfoliocompanies"

@attribute [Authorize]

@inject HttpClient Http
@using FinanceDashboard.Shared.Models
@using System.Text.Json.Nodes
@using System.Text.Json

<div class="event-schedule-area-two bg-color pad100">
    <div class="container">
        <div class="row mb-4">
            <div class="col-lg-12">
                <div class="container mt-4">
                    <div class="row d-flex justify-content-center">
                        <div class="col-md-9"> 
                            <h3 class="heading mt-1 text-center">Company added to your portfolio</h3>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade active show" id="home" role="tabpanel">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th class="text-center" scope="col">Symbol</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Financial Data</th>
                                        <th class="text-center" scope="col">Remove from portfolio</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var company in PortfolioCompaniesList)
                                    {
                                        <tr class="inner-box">
                                            <td>
                                                <div class="r-no text-center">
                                                    <span>@company.Symbol</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="r-no">
                                                    <span>@company.Name</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="event-wrap">
                                                    <h3><a>Current Price: @company.CurrentPrice</a></h3>
                                                    <div class="meta">
                                                        <div class="revenue-growth">
                                                            <a>Revenue Growth: @company.RevenueGrowth</a>
                                                        </div>
                                                        <div class="profit-margins">
                                                            <a>Profit Margin: @company.ProfitMargins</a>
                                                        </div>
                                                        <div class="recommendation">
                                                            @if(@company.Recommendation.Contains("buy"))
                                                            {
                                                                <span>Recommendation: <span style="color: green;">@company.Recommendation</span></span>
                                                            } else {
                                                                <span>Recommendation: <span style="color: red;">@company.Recommendation</span></span>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="primary-btn text-center">
                                                    <a class="btn btn-danger" @onclick=@(() => RemoveFromPortfolio(company))>Remove from portfolio</a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Company> PortfolioCompaniesList = new List<Company>();
    
    protected override async Task OnInitializedAsync()
    {
        try {
            PortfolioCompaniesList = await Http.GetFromJsonAsync<List<Company>>("api/user/getportfoliocompanies");
            
            foreach (var company in PortfolioCompaniesList)
            {
                FinancialDataResult quoteResult = await Http.GetFromJsonAsync<FinancialDataResult>("api/yahoofinance/financialdata?symbol=" + company.Symbol) ?? new FinancialDataResult();
                company.CurrentPrice = quoteResult?.QuoteSummary?.Result?.FirstOrDefault()?.FinancialData.CurrentPrice.fmt ?? "---";
                company.RevenueGrowth = quoteResult?.QuoteSummary?.Result?.FirstOrDefault()?.FinancialData.RevenueGrowth.fmt ?? "---";
                company.ProfitMargins = quoteResult?.QuoteSummary?.Result?.FirstOrDefault()?.FinancialData.ProfitMargins.fmt ?? "---";
                company.Recommendation = quoteResult?.QuoteSummary?.Result?.FirstOrDefault()?.FinancialData.RecommendationKey ?? "---";
            }
        } catch(Exception ex)
        {
            PortfolioCompaniesList = new List<Company>();
            System.Console.WriteLine(ex.Message);
        }
    }

    private async Task RemoveFromPortfolio(Company company)
    {
        try {
            await Http.PutAsJsonAsync("api/user/removecompany", company);
        } catch(Exception e)
        {
            System.Console.WriteLine(e.Message);
        }
    }
}
